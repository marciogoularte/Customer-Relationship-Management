@using System.Drawing
@using TVChannelsCRM.Web.Areas.Users.ViewModels.Profile
@model string

@{
    const string controllerName = "Profile";
}
@(Html.Kendo().Scheduler<SchedulerTaskViewModel>()
    .Name("scheduler")
    .Date(DateTime.Now.Date)
    .StartTime(DateTime.Now.Date)
    .Height(600)
    .Views(views =>
    {
        views.DayView();
        views.WeekView(weekView => weekView.Selected(true));
        views.MonthView();
        views.AgendaView();
        views.TimelineView();
    })
        .Timezone("Etc/UTC")
            .Resources(resources =>
            {
                resources.Add(m => m.IsFinished)
                   .Title("Is Finished")
                   .DataTextField("Text")
                   .DataValueField("Value")
                   .DataColorField("Color")
                   .BindTo(new[] { 
                    new { Text = "Finished", Value = true, Color = "#6eb3fa" },
                    new { Text = "Not Finished", Value = false, Color = "#f58a8a" } 
                });
            })
        .DataSource(d => d
            .Model(m =>
            {
                m.Id(f => f.Id);
                m.Field(f => f.Title).DefaultValue("No title");
                m.Field(f => f.Title).DefaultValue("No title");
                m.Field(f => f.UserId).DefaultValue(Model);
                m.Field(f => f.IsFinished).DefaultValue(true);
                m.RecurrenceId(f => f.RecurrenceId);
            })
            .Read("Read", controllerName, new { userId = Model })
            .Create("Create", controllerName)
            .Destroy("Destroy", controllerName)
            .Update("Update", controllerName)
    )
)

@*.Timezone("Etc/UTC")
*@

@*.Resources(resource =>
    {
        resource.Add(m => m.RoomID)
            .Title("Room")
            .DataTextField("Text")
            .DataValueField("Value")
            .DataColorField("Color")
            .BindTo(new[] {
               new { Text = "Meeting Room 101", Value = 1, Color = "#6eb3fa" },
               new { Text = "Meeting Room 201", Value = 2, Color = "#f58a8a" }
           });
        resource.Add(m => m.Attendees)
            .Title("Attendees")
            .Multiple(true)
            .DataTextField("Text")
            .DataValueField("Value")
            .DataColorField("Color")
            .BindTo(new[] {
               new { Text = "Alex", Value = 1, Color = "#f8a398" },
               new { Text = "Bob", Value = 2, Color = "#51a0ed" },
               new { Text = "Charlie", Value = 3, Color = "#56ca85" }
           });
    })*@
@*<script type="text/javascript">
        $(function () {
            $("#people :checkbox").change(function (e) {
                var checked = $.map($("#people :checked"), function (checkbox) {
                    return parseInt($(checkbox).val());
                });

                var filter = {
                    logic: "or",
                    filters: $.map(checked, function (value) {
                        return {
                            operator: "eq",
                            field: "Id",
                            value: value
                        };
                    })
                };

                var scheduler = $("#scheduler").data("kendoScheduler");

                scheduler.dataSource.filter(filter);
            });
        })
    </script>*@

<style>
    #scheduler {
        font-size: 14px;
    }
</style>