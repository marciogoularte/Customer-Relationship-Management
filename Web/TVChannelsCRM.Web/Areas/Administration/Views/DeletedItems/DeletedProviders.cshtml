@using TVChannelsCRM.Web.Areas.Users.ViewModels.Providers
@model IEnumerable<string>
@{
    ViewBag.Title = "Deleted Providers";
    const string controllerName = "DeletedItems";
}

<style>
    .demo-section {
        width: 250px;
        margin: 35px auto 50px;
        padding: 30px;
    }

        .demo-section h2 {
            text-transform: uppercase;
            font-size: 1.2em;
            margin-bottom: 10px;
        }
</style>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/kendo")
@Scripts.Render("~/bundles/jqueryval")

<h2>Deleted providers</h2>

    @(Html.Kendo()
     .Grid<ProviderViewModel>()
    .Name("grid-deleted-providers")
    .Columns(columns =>
    {
        columns.Bound(model => model.Name).Width(200);
        columns.Bound(model => model.Type).Width(100);
        columns.Bound(model => model.Eik).Hidden(true);
        columns.Bound(model => model.Email).Width(200);
        columns.Bound(model => model.ResidenceAndAddress).Hidden(true);
        columns.Bound(model => model.NetworkPage).Hidden(true);
        columns.Bound(model => model.ContactPerson).Width(200);
        columns.Bound(model => model.PhoneNumber).Hidden(true);
        columns.Bound(model => model.Email).Hidden(true);
        columns.Bound(model => model.Address).Hidden(true);
        columns.Bound(model => model.Term).Hidden(true);
        columns.Bound(model => model.CPS).Hidden(true);
        columns.Bound(model => model.Commission).Hidden(true);
        columns.Bound(model => model.Comments).Width(280);
        columns.Command(command => command.Custom("Restore").Click("showDetails"));
    })
          .ToolBar(toolBar =>
          {
              toolBar.Template(@<text>

                @(Html.Kendo().AutoComplete()
                                            .Name("searchbox-deleted-providers")
                                         .Placeholder("Provider name... ")
                                         .BindTo(Model)
                                         .Filter("contains")
                )<button class="k-button k-button-icontext k-grid-excel"><span class="k-icon k-i-excel"></span>Export to Excel</button>
<button class="k-button k-button-icontext k-grid-pdf"><span class="k-icon k-i-pdf"></span>Export to PDF</button>
            </text>);
          })
                            .Groupable()
                            .ColumnMenu()
                            .Filterable()
                            .Navigatable()
                            .Resizable(r => r.Columns(true))
                            .Reorderable(r => r.Columns(true))
                            .Events(ev => ev.Change("selectRow"))
                                                    .HtmlAttributes(new { @style = "word-break:break-all;" })
                            .Selectable(select => select.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Cell))
                            .Excel(excel => excel
                                .FileName("Deleted Provides Database.xlsx")
                                .Filterable(true)
                                .ProxyURL(Url.Action("Excel_Export_Save", controllerName))
                             )
                            .Pdf(pdf => pdf
                                .AllPages()
                                     .FileName("Deleted Providers Database.pdf")
                                .ProxyURL(Url.Action("Pdf_Export_Save", controllerName))
                            )
                            .Pageable(pageable => pageable
                                .Refresh(true)
                                .PageSizes(true)
                                .ButtonCount(5))
                            .Sortable(sort =>
                            {
                                sort.AllowUnsort(false);
                                sort.SortMode(GridSortMode.SingleColumn);
                            })
                            .DataSource(data =>
                            {
                                data.Ajax()
                                    .Model(model => model.Id(c => c.Id))
                                    .PageSize(10)
                                    .ServerOperation(true)
                                    .Events(ev => ev.Error("errorAlert"))
                                    .Read(read => read.Action("ReadDeletedProviders", controllerName))
                   .Read(read => read.Action("SearchProviders", controllerName).Data("addSearchProviders"));
                            }))
<div id="selected">
</div>

@(Html.Kendo().Window().Name("restore-provider-box")
    .Title("Restore provider")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(300)
)

<script type="text/x-kendo-template" id="providers-template">
    <div id="providers-restore-container">
        <h4>Are you sure that you want to restore that provider?</h4>
        <button id="restore-provider-button" class="btn btn-primary">Restore</button>
    </div>
</script>

<script type="text/javascript">
    function onAdditionalDataProviders() {
        return {
            text: $("#searchbox-deleted-providers").val()
        };
    }

    function addSearchProviders() {
        return { searchboxDeletedProviders: $('#searchbox-deleted-providers').val() };
    }

    $('#searchbox-deleted-providers').keyup(function () {
        $('#grid-deleted-providers').data('kendoGrid').dataSource.read();
    });

    var detailsTemplate = kendo.template($("#providers-template").html());
    var dataItem;

    function showDetails(e) {
        e.preventDefault();

        dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#restore-provider-box").data("kendoWindow");

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }

    $(document).on('click', '#restore-provider-button', function () {
        $.ajax({
            type: "POST",
            url: '@Url.Action("ConfirmRestoreProvider", "DeletedItems")',
            data: { providerId: dataItem.Id.toString() },
            datatype: "JSON",
            success: function () {
                var grid = $("#grid-deleted-providers").data("kendoGrid");
                grid.dataSource.fetch();
                var wnd = $("#restore-provider-box").data("kendoWindow");
                wnd.close();
            }
        });
    });

    function selectRow() {
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        });

        $('#selected').text(selected);
    }

    function errorAlert() {
        console.log("An error ocurred");
    }

    function makeActiveOnClick(tab) {
        $(".tabs").removeClass('active');
        $(tab).addClass('active');
    }
</script>