@using TVChannelsCRM.Web.Areas.Users.ViewModels.Contracts
@model IEnumerable<string>
@{
    ViewBag.Title = "Deleted Contracts";
    const string controllerName = "DeletedItems";
}

<style>
    .demo-section {
        width: 250px;
        margin: 35px auto 50px;
        padding: 30px;
    }

        .demo-section h2 {
            text-transform: uppercase;
            font-size: 1.2em;
            margin-bottom: 10px;
        }
</style>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/kendo")
@Scripts.Render("~/bundles/jqueryval")

<h2>Deleted Contracts</h2>

@(Html.Kendo()
        .Grid<ContractViewModel>()
        .Name("grid-deleted-contracts")
        .Columns(columns =>
        {
            columns.Bound(model => model.StartDate).Format("{0:dd/MM/yyyy}").Width(185);
            columns.Bound(model => model.Term).Width(32).Hidden(true);
            columns.Bound(model => model.EndDate).Format("{0:dd/MM/yyyy}").Width(32);
            columns.Bound(model => model.NoticePeriod).Width(32).Hidden(true);
            columns.Bound(model => model.BillingStartDate).Format("{0:dd/MM/yyyy}").Width(32).Hidden(true);
            columns.Bound(model => model.BillingEndDate).Format("{0:dd/MM/yyyy}").Width(32).Hidden(true);
            columns.Bound(model => model.StartingDateOfDueDate).Format("{0:dd/MM/yyyy}").Width(32).Hidden(true);
            columns.Bound(model => model.NumberOfDaysForPaymentDueDate).Width(32).Hidden(true);
            columns.Bound(model => model.NumberOfDaysToBeConsidered).Width(32).Hidden(true);
            columns.Bound(model => model.AcceptingReports).Width(32).Hidden(true);
            columns.Bound(model => model.GoverningLaw).Width(32).Hidden(true);
            columns.Bound(model => model.Comments).Width(275);
            columns.Command(command => command.Custom("Restore").Click("showDetailsDeletedContracts"));
        })
        .ToolBar(toolBar =>
        {
            toolBar.Template(@<text>

            @(Html.Kendo().AutoComplete()
                .Name("searchbox-deleted-contracts")
                .Placeholder("Term... ")
                .BindTo(Model)
                .Filter("contains")
            )
            <button class="k-button k-button-icontext k-grid-excel"><span class="k-icon k-i-excel"></span>Export to Excel</button>
            <button class="k-button k-button-icontext k-grid-pdf"><span class="k-icon k-i-pdf"></span>Export to PDF</button>
        </text>);
        })
        .Groupable()
        .ColumnMenu()
        .Filterable()
        .Navigatable()
        .Resizable(r => r.Columns(true))
        .Reorderable(r => r.Columns(true))
        .Events(ev => ev.Change("selectRow"))
        .Editable(edit => edit.Mode(GridEditMode.PopUp))
        .HtmlAttributes(new { @style = "word-break:break-all;" })
        .Selectable(select => select.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Cell))
        .Excel(excel => excel
            .FileName("Deleted Contracts Database.xlsx")
            .Filterable(true)
            .ProxyURL(Url.Action("Excel_Export_Save", controllerName))
        )
        .Pdf(pdf => pdf
            .AllPages()
            .FileName("Deleted Contracts Database.pdf")
            .ProxyURL(Url.Action("Pdf_Export_Save", controllerName))
        )
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .Sortable(sort =>
        {
            sort.AllowUnsort(false);
            sort.SortMode(GridSortMode.SingleColumn);
                })
        .DataSource(data =>
        {
            data.Ajax()
            .Model(model => model.Id(c => c.Id))
            .PageSize(10)
            .ServerOperation(true)
            .Events(ev => ev.Error("errorAlert"))
            .Read(read => read.Action("ReadDeletedContracts", "DeletedItems"))
                .Read(read => read.Action("SearchContracts", controllerName).Data("addSearchContracts"));
        }))   
<div id="selected">
</div>

@(Html.Kendo().Window().Name("restore-contract-box")
    .Title("Restore Contract")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(300)
)

<script type="text/x-kendo-template" id="Contracts-template">
    <div id="contracts-restore-container">
        <h4>Are you sure that you want to restore that contract?</h4>
        <button id="restore-contract-button" class="btn btn-primary">Restore</button>
    </div>
</script>

<script>
    function onAdditionalDataContracts() {
        return {
            text: $("#searchbox-deleted-contracts").val()
        };
    }

    function addSearchContracts() {
        return { searchboxDeletedContracts: $('#searchbox-deleted-contracts').val() };
    }

    $('#searchbox-deleted-contracts').keyup(function () {
        $('#grid-deleted-contracts').data('kendoGrid').dataSource.read();
    });

    function selectRow() {
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        });

        $('#selected').text(selected);
    }

    function errorAlert() {
        console.log("An error ocurred");
    }

    function makeActiveOnClick(tab) {
        $(".tabs").removeClass('active');
        $(tab).addClass('active');
    }

    var detailsTemplate = kendo.template($("#Contracts-template").html());
    var dataItem;

    function showDetailsDeletedContracts(e) {
        e.preventDefault();

        dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#restore-contract-box").data("kendoWindow");

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }

    $(document).on('click', '#restore-contract-button', function () {
        $.ajax({
            type: "POST",
            url: '@Url.Action("ConfirmRestoreContract", "DeletedItems")',
            data: { ContractId: dataItem.Id.toString() },
            datatype: "JSON",
            success: function () {
                var grid = $("#grid-deleted-contracts").data("kendoGrid");
                grid.dataSource.fetch();
                var wnd = $("#restore-contract-box").data("kendoWindow");
                wnd.close();
            }
        });
    });
</script>