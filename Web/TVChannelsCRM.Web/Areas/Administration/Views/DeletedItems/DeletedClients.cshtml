@using TVChannelsCRM.Web.Areas.Users.ViewModels.Clients
@{
    ViewBag.Title = "Deleted Clients";
    const string controllerName = "DeletedItems";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/kendo")
@Scripts.Render("~/bundles/jqueryval")
<h2>Deleted clients</h2>

<div id="pnlContent">
    @(Html.Kendo()
    .Grid<ClientViewModel>()
        .Name("grid-deleted-clients")
    .Columns(columns =>
    {
        columns.Bound(model => model.IsActive);
        columns.Bound(model => model.ActiveFrom).Format("{0:dd/MM/yyyy}");
        columns.Bound(model => model.ActiveTo).Format("{0:dd/MM/yyyy}");
        columns.Bound(model => model.Mg);
        columns.Bound(model => model.IrdCard);
        columns.Bound(model => model.Invoicing);
        columns.Bound(model => model.DateOfSigning).Format("{0:dd/MM/yyyy}");
        columns.Bound(model => model.DateOfExpiring).Format("{0:dd/MM/yyyy}");
        columns.Bound(model => model.Currency);
        columns.Bound(model => model.InvoicesIssued);
        columns.Bound(model => model.PaymentsReceived);
        columns.Bound(model => model.Contract);
        columns.Command(command => command.Custom("Restore").Click("showDetails"));
    })
        .ToolBar(tools =>
        {
            tools.Excel();
            tools.Pdf();
        })
        .Groupable()
        .ColumnMenu()
        .Filterable()
        .Navigatable()
        .Resizable(r => r.Columns(true))
        .Reorderable(r => r.Columns(true))
        .Events(ev => ev.Change("selectRow"))
         .HtmlAttributes(new { style = "width:1740px" })
        .Selectable(select => select.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Cell))
        .Excel(excel => excel
                .FileName("Deleted Clients Database.xlsx")
            .Filterable(true)
            .ProxyURL(Url.Action("Excel_Export_Save", controllerName))
         )
        .Pdf(pdf => pdf
            .AllPages()
                 .FileName("Deleted Clients Database.pdf")
            .ProxyURL(Url.Action("Pdf_Export_Save", controllerName))
        )
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .Sortable(sort =>
        {
            sort.AllowUnsort(false);
            sort.SortMode(GridSortMode.SingleColumn);
        })
        .DataSource(data =>
        {
            data.Ajax()
                .Model(model => model.Id(c => c.Id))
                .PageSize(10)
                .ServerOperation(true)
                .Events(ev => ev.Error("errorAlert"))
                .Read(read => read.Action("ReadDeletedClients", controllerName));
        }))
</div>
<div id="selected">
</div>

@(Html.Kendo().Window().Name("restore-client-box")
    .Title("Restore client")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Width(300)
)

<script type="text/x-kendo-template" id="clients-template">
    <div id="clients-restore-container">
        <h4>Are you sure that you want to restore that client?</h4>
        <button id="restore-client-button" class="btn btn-primary">Restore</button>
    </div>
</script>

<script type="text/javascript">
    var detailsTemplate = kendo.template($("#clients-template").html());
    var dataItem;

    function showDetails(e) {
        e.preventDefault();

        dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#restore-client-box").data("kendoWindow");

        wnd.content(detailsTemplate(dataItem));
        wnd.center().open();
    }

    $(document).on('click', '#restore-client-button', function () {
        $.ajax({
            type: "POST",
            url: '@Url.Action("ConfirmRestoreClient", "DeletedItems")',
            data: { clientId: dataItem.Id.toString() },
            datatype: "JSON",
            success: function () {
                var grid = $("#grid-deleted-clients").data("kendoGrid");
                grid.dataSource.fetch();
                var wnd = $("#restore-client-box").data("kendoWindow");
                wnd.close();
            }
        });
    });
</script>

<script>
    function selectRow() {
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        });

        $('#selected').text(selected);
    }

    function errorAlert() {
        console.log("An error ocurred");
    }

    function makeActiveOnClick(tab) {
        $(".tabs").removeClass('active');
        $(tab).addClass('active');
    }
</script>